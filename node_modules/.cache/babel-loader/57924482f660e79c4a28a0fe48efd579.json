{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/Desktop/Practics/Udemy/React/react-hooks-project/src/context/github/githubState.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { GithubContext } from \"./githubContext\";\nimport { githubReducer } from \"./githubReducer\";\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from \"../types\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = process.env.REACT_APP_CLIENT_ID;\nconst secret = process.env.REACT_APP_CLIENT_SECRET;\nexport const GithubState = ({\n  children\n}) => {\n  _s();\n\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  };\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  const search = async value => {\n    setLoading();\n    const response = await axios.get(`https://api.github.com/search/users?q=${value}&client_id=${clientId}&client_secret=${secret}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: response.data\n    });\n  };\n\n  const getUser = async name => {\n    setLoading(); //...\n\n    dispatch({\n      type: GET_USER,\n      payload: {}\n    });\n  };\n\n  const getRepos = async name => {\n    setLoading(); //...\n\n    dispatch({\n      type: GET_REPOS,\n      payload: []\n    });\n  };\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  });\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  const {\n    user,\n    users,\n    repos,\n    loading\n  } = state;\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      user,\n      users,\n      repos,\n      loading,\n      search,\n      setLoading,\n      getRepos,\n      getUser,\n      clearUsers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["/home/vladislav/Desktop/Practics/Udemy/React/react-hooks-project/src/context/github/githubState.js"],"names":["useReducer","GithubContext","githubReducer","CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","SET_LOADING","axios","clientId","process","env","REACT_APP_CLIENT_ID","secret","REACT_APP_CLIENT_SECRET","GithubState","children","initialState","user","users","loading","repos","state","dispatch","search","value","setLoading","response","get","type","payload","data","getUser","name","getRepos","clearUsers"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,EAA0CC,YAA1C,EAAwDC,WAAxD,QAA0E,UAA1E;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAA7B;AACA,MAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYG,uBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACzC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,KAAK,EAAE,EAFY;AAGnBC,IAAAA,OAAO,EAAE,KAHU;AAInBC,IAAAA,KAAK,EAAE;AAJY,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACE,aAAD,EAAgBe,YAAhB,CAApC;;AAEA,QAAMO,MAAM,GAAG,MAAMC,KAAN,IAAe;AAC5BC,IAAAA,UAAU;AACV,UAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CACpB,yCAAwCH,KAAM,cAAahB,QAAS,kBAAiBI,MAAO,EADxE,CAAvB;AAGAU,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEvB,YADC;AAEPwB,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,KAAD,CAAR;AAID,GATD;;AAWA,QAAMC,OAAO,GAAG,MAAMC,IAAN,IAAc;AAC5BP,IAAAA,UAAU,GADkB,CAE5B;;AACAH,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAExB,QADC;AAEPyB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPD;;AASA,QAAMI,QAAQ,GAAG,MAAMD,IAAN,IAAc;AAC7BP,IAAAA,UAAU,GADmB,CAE7B;;AACAH,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEzB,SADC;AAEP0B,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPD;;AASA,QAAMK,UAAU,GAAG,MAAMZ,QAAQ,CAAC;AAACM,IAAAA,IAAI,EAAE1B;AAAP,GAAD,CAAjC;;AACA,QAAMuB,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAACM,IAAAA,IAAI,EAAEtB;AAAP,GAAD,CAAjC;;AAEA,QAAM;AAACW,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcE,IAAAA,KAAd;AAAqBD,IAAAA;AAArB,MAAgCE,KAAtC;AACA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC7BJ,MAAAA,IAD6B;AACvBC,MAAAA,KADuB;AAChBE,MAAAA,KADgB;AACTD,MAAAA,OADS;AAE7BI,MAAAA,MAF6B;AAErBE,MAAAA,UAFqB;AAETQ,MAAAA,QAFS;AAECF,MAAAA,OAFD;AAEUG,MAAAA;AAFV,KAA/B;AAAA,cAIGnB;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAlDM;;GAAMD,W;;KAAAA,W","sourcesContent":["import {useReducer} from \"react\";\nimport {GithubContext} from \"./githubContext\";\nimport {githubReducer} from \"./githubReducer\";\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\";\nimport axios from \"axios\";\n\nconst clientId = process.env.REACT_APP_CLIENT_ID\nconst secret = process.env.REACT_APP_CLIENT_SECRET\n\nexport const GithubState = ({children}) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  }\n  const [state, dispatch] = useReducer(githubReducer, initialState)\n\n  const search = async value => {\n    setLoading()\n    const response = await axios.get(\n      `https://api.github.com/search/users?q=${value}&client_id=${clientId}&client_secret=${secret}`\n    )\n    dispatch({\n      type: SEARCH_USERS,\n      payload: response.data\n    })\n  }\n\n  const getUser = async name => {\n    setLoading()\n    //...\n    dispatch({\n      type: GET_USER,\n      payload: {}\n    })\n  }\n\n  const getRepos = async name => {\n    setLoading()\n    //...\n    dispatch({\n      type: GET_REPOS,\n      payload: []\n    })\n  }\n\n  const clearUsers = () => dispatch({type: CLEAR_USERS})\n  const setLoading = () => dispatch({type: SET_LOADING})\n\n  const {user, users, repos, loading} = state\n  return (\n    <GithubContext.Provider value={{\n      user, users, repos, loading,\n      search, setLoading, getRepos, getUser, clearUsers\n    }}>\n      {children}\n    </GithubContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}