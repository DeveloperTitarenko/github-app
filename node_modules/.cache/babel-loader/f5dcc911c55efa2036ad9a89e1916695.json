{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/Desktop/Practics/Udemy/React/react-hooks-project/src/context/github/githubState.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { GithubContext } from \"./githubContext\";\nimport { githubReducer } from \"./githubReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubState = ({\n  children\n}) => {\n  _s();\n\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  };\n  const [state, dispatcch] = useReducer(githubReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {},\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubState, \"jIBDeW5qDkERxqLDZ0yE9oEkoNI=\");\n\n_c = GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["/home/vladislav/Desktop/Practics/Udemy/React/react-hooks-project/src/context/github/githubState.js"],"names":["useReducer","GithubContext","githubReducer","GithubState","children","initialState","user","users","loading","repos","state","dispatcch"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,aAAR,QAA4B,iBAA5B;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACzC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,KAAK,EAAE,EAFY;AAGnBC,IAAAA,OAAO,EAAE,KAHU;AAInBC,IAAAA,KAAK,EAAE;AAJY,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBX,UAAU,CAACE,aAAD,EAAgBG,YAAhB,CAArC;AACA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,EAA/B;AAAA,cAGGD;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAfM;;GAAMD,W;;KAAAA,W","sourcesContent":["import {useReducer} from \"react\";\nimport {GithubContext} from \"./githubContext\";\nimport {githubReducer} from \"./githubReducer\";\n\nexport const GithubState = ({children}) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  }\n  const [state, dispatcch] = useReducer(githubReducer, initialState)\n  return (\n    <GithubContext.Provider value={{\n\n    }}>\n      {children}\n    </GithubContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}