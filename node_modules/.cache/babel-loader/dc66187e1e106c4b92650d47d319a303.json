{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/Desktop/Practics/Udemy/React/react-hooks-project/src/context/github/githubState.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { GithubContext } from \"./githubContext\";\nimport { githubReducer } from \"./githubReducer\";\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubState = ({\n  children\n}) => {\n  _s();\n\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  };\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  const search = async value => {\n    // ....\n    dispatch({\n      type: SEARCH_USERS,\n      payload: []\n    });\n  };\n\n  const getUser = async name => {\n    //...\n    dispatch({\n      type: GET_USER,\n      payload: {}\n    });\n  };\n\n  const getRepos = async name => {\n    //...\n    dispatch({\n      type: GET_REPOS,\n      payload: []\n    });\n  };\n\n  const clearUsers = () => {\n    dispatch({\n      type: CLEAR_USERS\n    });\n  };\n\n  const setLoading = () => dispatch({});\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {},\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["/home/vladislav/Desktop/Practics/Udemy/React/react-hooks-project/src/context/github/githubState.js"],"names":["useReducer","GithubContext","githubReducer","CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","GithubState","children","initialState","user","users","loading","repos","state","dispatch","search","value","type","payload","getUser","name","getRepos","clearUsers","setLoading"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,EAA0CC,YAA1C,QAA6D,UAA7D;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACzC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,KAAK,EAAE,EAFY;AAGnBC,IAAAA,OAAO,EAAE,KAHU;AAInBC,IAAAA,KAAK,EAAE;AAJY,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACE,aAAD,EAAgBO,YAAhB,CAApC;;AAEA,QAAMO,MAAM,GAAG,MAAMC,KAAN,IAAe;AAC5B;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ,YADC;AAEPa,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAND;;AAQA,QAAMC,OAAO,GAAG,MAAMC,IAAN,IAAc;AAC5B;AACAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEb,QADC;AAEPc,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAND;;AAQA,QAAMG,QAAQ,GAAG,MAAMD,IAAN,IAAc;AAC7B;AACAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEd,SADC;AAEPe,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAND;;AAQA,QAAMI,UAAU,GAAG,MAAM;AACvBR,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEf;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,QAAMqB,UAAU,GAAG,MAAMT,QAAQ,CAAC,EAAD,CAAjC;;AAGA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,EAA/B;AAAA,cAGGP;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjDM;;GAAMD,W;;KAAAA,W","sourcesContent":["import {useReducer} from \"react\";\nimport {GithubContext} from \"./githubContext\";\nimport {githubReducer} from \"./githubReducer\";\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS} from \"../types\";\n\nexport const GithubState = ({children}) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  }\n  const [state, dispatch] = useReducer(githubReducer, initialState)\n\n  const search = async value => {\n    // ....\n    dispatch({\n      type: SEARCH_USERS,\n      payload: []\n    })\n  }\n\n  const getUser = async name => {\n    //...\n    dispatch({\n      type: GET_USER,\n      payload: {}\n    })\n  }\n\n  const getRepos = async name => {\n    //...\n    dispatch({\n      type: GET_REPOS,\n      payload: []\n    })\n  }\n\n  const clearUsers = () => {\n    dispatch({\n      type: CLEAR_USERS\n    })\n  }\n\n  const setLoading = () => dispatch({\n    \n  })\n  return (\n    <GithubContext.Provider value={{\n\n    }}>\n      {children}\n    </GithubContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}